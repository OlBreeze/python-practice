# –ó–∞–≤–¥–∞–Ω–Ω—è 5: –†–æ–∑—Ä–æ–±–∏—Ç–∏ –ø—Ä–æ—Å—Ç–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä –ø–æ–¥—ñ–π
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∑–∞–º–∏–∫–∞–Ω–Ω—è, —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π, –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–¥—ñ–π —Ç–∞ –ø–µ—Ä–µ–≥–ª—è–¥—É –º–∞–π–±—É—Ç–Ω—ñ—Ö –ø–æ–¥—ñ–π.
# –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ –ø–æ–¥—ñ—ó —É —Å–ø–∏—Å–∫—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –≥–ª–æ–±–∞–ª—å–Ω–æ—ó –∑–º—ñ–Ω–Ω–æ—ó.

from datetime import datetime, date
from typing import List, Dict

events = []


def create_event_manager():
    """
    –°—Ç–≤–æ—Ä—é—î –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥—ñ–π.
    –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ª–æ–≤–Ω–∏–∫ –∑ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø–æ–¥—ñ—è–º–∏.
    """

    def add_event(name: str, event_date: str, description: str = "") -> str:
        """–î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–¥—ñ—ó."""
        try:
            parsed_date = datetime.strptime(event_date, "%Y-%m-%d").date()

            event = {
                "name": name,
                "date": parsed_date,
                "description": description,
                "created_at": datetime.now()
            }

            events.append(event)
            return f"–ü–æ–¥—ñ—è '{name}' –¥–æ–¥–∞–Ω–∞ –Ω–∞ {event_date}"

        except ValueError:
            return "–ü–æ–º–∏–ª–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ YYYY-MM-DD"

    def remove_event(name: str) -> str:
        """–í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–¥—ñ—ó –∑–∞ –Ω–∞–∑–≤–æ—é."""
        for i, event in enumerate(events):
            if event["name"].lower() == name.lower():
                removed_event = events.pop(i)
                return f"–ü–æ–¥—ñ—è '{removed_event['name']}' –≤–∏–¥–∞–ª–µ–Ω–∞"

        return f"–ü–æ–¥—ñ—è '{name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞"

    def get_upcoming_events(days_ahead: int = 30) -> List[Dict]:
        """–ú–∞–π–±—É—Ç–Ω—ñ –ø–æ–¥—ñ—ó."""
        today = date.today()
        upcoming = []

        for event in events:
            days_until = (event["date"] - today).days
            if 0 <= days_until <= days_ahead:
                event_copy = event.copy()
                event_copy["days_until"] = days_until
                upcoming.append(event_copy)

        # –°–æ—Ä—Ç—É—î–º–æ –∑–∞ –¥–∞—Ç–æ—é
        upcoming.sort(key=lambda x: x["date"])
        # sort() ‚Üí –º–µ–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞ –º–µ—Å—Ç–µ (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç None).
        # sorted() ‚Üí —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫, –Ω–µ —Ç—Ä–æ–≥–∞—è –∏—Å—Ö–æ–¥–Ω—ã–π.

        return upcoming

    def show_upcoming_events(days_ahead: int = 30) -> str:
        """–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–∞–π–±—É—Ç–Ω—ñ—Ö –ø–æ–¥—ñ–π."""
        upcoming = get_upcoming_events(days_ahead)

        if not upcoming:
            return f"–ù–µ–º–∞—î –º–∞–π–±—É—Ç–Ω—ñ—Ö –ø–æ–¥—ñ–π –Ω–∞ –Ω–∞–π–±–ª–∏–∂—á—ñ {days_ahead} –¥–Ω—ñ–≤"

        result = f"–ú–∞–π–±—É—Ç–Ω—ñ –ø–æ–¥—ñ—ó (–Ω–∞–π–±–ª–∏–∂—á—ñ {days_ahead} –¥–Ω—ñ–≤):\n"
        result += "-" * 50 + "\n"

        for event in upcoming:
            days_text = "—Å—å–æ–≥–æ–¥–Ω—ñ" if event["days_until"] == 0 else f"—á–µ—Ä–µ–∑ {event['days_until']} –¥–Ω."
            result += f"üìÖ {event['name']} - {event['date']} ({days_text})\n"
            if event["description"]:
                result += f"   üìù {event['description']}\n"

        return result

    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å–ª–æ–≤–Ω–∏–∫ –∑ –º–µ—Ç–æ–¥–∞–º–∏
    return {
        "add": add_event,
        "remove": remove_event,
        "upcoming": show_upcoming_events,
    }


# –°—Ç–≤–æ—Ä—é—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥—ñ–π
calendar = create_event_manager()

# –î–æ–¥–∞—î–º–æ –ø–æ–¥—ñ—ó
print("1. –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π:")
print(calendar["add"]("–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è", "2025-09-15", "–°–≤—è—Ç–∫—É–≤–∞–Ω–Ω—è 25-—Ä—ñ—á—á—è"))
print(calendar["add"]("–ó—É—Å—Ç—Ä—ñ—á", "2025-09-05", "–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ—è –ø—Ä–æ–µ–∫—Ç—É"))
print(calendar["add"]("–í—ñ–¥–ø—É—Å—Ç–∫–∞", "2025-10-01", "–ü–æ—ó–∑–¥–∫–∞ –¥–æ –ö–∞—Ä–ø–∞—Ç"))
print(calendar["add"]("–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—è", "2025-09-20"))

print("\n2. –ú–∞–π–±—É—Ç–Ω—ñ –ø–æ–¥—ñ—ó (30 –¥–Ω—ñ–≤):")
print(calendar["upcoming"](30))

print("\n3. –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–¥—ñ—ó:")
print(calendar["remove"]("–ó—É—Å—Ç—Ä—ñ—á"))
print(calendar["upcoming"](30))

print("\n5. –°–ø—Ä–æ–±–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –Ω–µ—ñ—Å–Ω—É—é—á—É –ø–æ–¥—ñ—é:")
print(calendar["remove"]("–ù–µ—ñ—Å–Ω—É—é—á–∞ –ø–æ–¥—ñ—è"))

print("–°—Ç–≤–æ—Ä—é—î–º–æ —â–µ –æ–¥–∏–Ω –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥—ñ–π:")
# –°—Ç–≤–æ—Ä—é—î–º–æ –¥—Ä—É–≥–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä (–∑ —Ç–∏–º–∏ –∂ –∑–∞–º–∏–∫–∞–Ω–Ω—è–º–∏)
calendar2 = create_event_manager()

print("–î—Ä—É–≥–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –º–∞—î –¥–æ—Å—Ç—É–ø –¥–æ —Ç–∏—Ö –∂–µ –ø–æ–¥—ñ–π:")
print(calendar2["upcoming"](30))

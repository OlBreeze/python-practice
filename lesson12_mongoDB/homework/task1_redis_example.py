"""
Redis ‚Äî User Session Management
"""

import redis
import json
from datetime import datetime, timedelta

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Redis
r = redis.StrictRedis(host='localhost', port=6379, db=0, decode_responses=True)

# –ß–∞—Å –∂–∏—Ç—Ç—è —Å–µ—Å—ñ—ó (—É —Å–µ–∫—É–Ω–¥–∞—Ö) ‚Äî 30 —Ö–≤–∏–ª–∏–Ω
SESSION_TTL = 30 * 60


def create_session(user_id: str, session_token: str):
    """
    –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤—É —Å–µ—Å—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—î —ó—ó —É Redis.
    """
    session_data = {
        "user_id": user_id,
        "session_token": session_token,
        "login_time": datetime.now().isoformat(),
        "last_activity": datetime.now().isoformat()
    }

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —è–∫ JSON –∑ TTL (Time To Live)
    r.setex(f"session:{user_id}", SESSION_TTL, json.dumps(session_data))
    print(f"‚úÖ Session created for user {user_id}")


def get_session(user_id: str):
    """
    –û—Ç—Ä–∏–º—É—î –∞–∫—Ç–∏–≤–Ω—É —Å–µ—Å—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Redis.
    """
    data = r.get(f"session:{user_id}")
    if data:
        return json.loads(data)
    else:
        print(f"‚ö†Ô∏è No active session for user {user_id}")
        return None


def update_session_activity(user_id: str):
    """
    –û–Ω–æ–≤–ª—é—î —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –ø–æ–¥–æ–≤–∂—É—î TTL.
    """
    session = get_session(user_id)
    if not session:
        return

    session["last_activity"] = datetime.now().isoformat()
    r.setex(f"session:{user_id}", SESSION_TTL, json.dumps(session))
    print(f"üîÑ Session for user {user_id} updated")


def delete_session(user_id: str):
    """
    –í–∏–¥–∞–ª—è—î —Å–µ—Å—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ —ñ–∑ —Å–∏—Å—Ç–µ–º–∏).
    """
    r.delete(f"session:{user_id}")
    print(f"üóëÔ∏è Session for user {user_id} deleted")


# ===========================
if __name__ == "__main__":
    user = "user_123"
    token = "abc123xyz"

    create_session(user, token)          # Create
    print(get_session(user))             # Read
    update_session_activity(user)        # Update
    print(get_session(user))
    delete_session(user)                 # Delete
    print(get_session(user))             # Check deleted

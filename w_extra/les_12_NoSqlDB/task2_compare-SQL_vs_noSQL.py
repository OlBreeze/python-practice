"""
–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è SQL (SQLite) vs NoSQL (MongoDB)
–û–¥–Ω–∞–∫–æ–≤–∞ –º–æ–¥–µ–ª—å –¥–∞–Ω–∏—Ö: –û–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω

–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è:
pip install pymongo
"""

import sqlite3
from pymongo import MongoClient
from datetime import datetime, timedelta
import json
import time

print("="*70)
print("–ü–û–†–Ü–í–ù–Ø–ù–ù–Ø SQL (SQLite) vs NoSQL (MongoDB)")
print("="*70)

# ============================================
# –ß–ê–°–¢–ò–ù–ê 1: SQLite (–†–µ–ª—è—Ü—ñ–π–Ω–∞ –ë–î)
# ============================================

print("\n" + "="*70)
print("1Ô∏è‚É£  SQL - SQLite (–†–µ–ª—è—Ü—ñ–π–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö)")
print("="*70)

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ SQLite
conn = sqlite3.connect('online_shop.db')
cursor = conn.cursor()

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å –∑ –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é
print("\nüìã –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å...")

cursor.execute('''
CREATE TABLE IF NOT EXISTS products (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    price REAL NOT NULL,
    category TEXT NOT NULL,
    stock INTEGER NOT NULL,
    description TEXT
)
''')

cursor.execute('''
CREATE TABLE IF NOT EXISTS customers (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    email TEXT UNIQUE NOT NULL,
    phone TEXT
)
''')

cursor.execute('''
CREATE TABLE IF NOT EXISTS orders (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    order_number TEXT UNIQUE NOT NULL,
    customer_id INTEGER NOT NULL,
    total_amount REAL NOT NULL,
    order_date DATETIME NOT NULL,
    status TEXT NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers(id)
)
''')

cursor.execute('''
CREATE TABLE IF NOT EXISTS order_items (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    order_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    quantity INTEGER NOT NULL,
    price REAL NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(id),
    FOREIGN KEY (product_id) REFERENCES products(id)
)
''')

conn.commit()
print("‚úÖ –¢–∞–±–ª–∏—Ü—ñ —Å—Ç–≤–æ—Ä–µ–Ω–æ")

# ============================================
# SQL - CREATE (Insert)
# ============================================

print("\nüìù CREATE –æ–ø–µ—Ä–∞—Ü—ñ—ó (SQL)...")

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
products_sql = [
    ("–ù–æ—É—Ç–±—É–∫ Lenovo IdeaPad", 25000, "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞", 15, "15.6 –¥—é–π–º—ñ–≤, 8GB RAM, SSD 512GB"),
    ("–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy S23", 30000, "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞", 25, "128GB, 5G"),
    ("–ù–∞–≤—É—à–Ω–∏–∫–∏ Sony WH-1000XM5", 12000, "–ê–∫—Å–µ—Å—É–∞—Ä–∏", 40, "–ë–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ, —à—É–º–æ–∑–∞–≥–ª—É—à–µ–Ω–Ω—è"),
    ("–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ Logitech MX Keys", 3500, "–ê–∫—Å–µ—Å—É–∞—Ä–∏", 30, "–ú–µ—Ö–∞–Ω—ñ—á–Ω–∞, –ø—ñ–¥—Å–≤—ñ—Ç–∫–∞"),
    ("–ú–æ–Ω—ñ—Ç–æ—Ä Dell 27\"", 8500, "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞", 10, "4K, IPS –ø–∞–Ω–µ–ª—å")
]

start_time = time.time()
cursor.executemany('''
    INSERT INTO products (name, price, category, stock, description)
    VALUES (?, ?, ?, ?, ?)
''', products_sql)
sql_insert_time = time.time() - start_time

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
customers_sql = [
    ("–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ", "ivan@example.com", "+380501234567"),
    ("–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª–µ–Ω–∫–æ", "maria@example.com", "+380502345678"),
    ("–û–ª–µ–∫—Å–∞–Ω–¥—Ä –®–µ–≤—á–µ–Ω–∫–æ", "alex@example.com", "+380503456789")
]

cursor.executemany('''
    INSERT INTO customers (name, email, phone)
    VALUES (?, ?, ?)
''', customers_sql)

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å
cursor.execute('''
    INSERT INTO orders (order_number, customer_id, total_amount, order_date, status)
    VALUES ('ORD-001', 1, 37000, ?, '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ')
''', (datetime(2024, 9, 15),))
order1_id = cursor.lastrowid

cursor.execute('''
    INSERT INTO order_items (order_id, product_id, quantity, price)
    VALUES (?, 1, 1, 25000), (?, 3, 1, 12000)
''', (order1_id, order1_id))

cursor.execute('''
    INSERT INTO orders (order_number, customer_id, total_amount, order_date, status)
    VALUES ('ORD-002', 2, 60000, ?, '–í –æ–±—Ä–æ–±—Ü—ñ')
''', (datetime(2024, 9, 20),))
order2_id = cursor.lastrowid

cursor.execute('''
    INSERT INTO order_items (order_id, product_id, quantity, price)
    VALUES (?, 2, 2, 30000)
''', (order2_id,))

conn.commit()
print(f"‚úÖ SQL INSERT: {len(products_sql)} –ø—Ä–æ–¥—É–∫—Ç—ñ–≤, {len(customers_sql)} –∫–ª—ñ—î–Ω—Ç—ñ–≤, 2 –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
print(f"‚è±Ô∏è  –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è INSERT: {sql_insert_time*1000:.2f} –º—Å")

# ============================================
# SQL - READ (Select)
# ============================================

print("\nüìñ READ –æ–ø–µ—Ä–∞—Ü—ñ—ó (SQL)...")

start_time = time.time()

# –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 30 –¥–Ω—ñ–≤
thirty_days_ago = datetime.now() - timedelta(days=30)
cursor.execute('''
    SELECT o.order_number, c.name, o.total_amount, o.status
    FROM orders o
    JOIN customers c ON o.customer_id = c.id
    WHERE o.order_date >= ?
''', (thirty_days_ago,))

sql_read_time = time.time() - start_time

print(f"üîç –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 30 –¥–Ω—ñ–≤:")
for row in cursor.fetchall():
    print(f"  - {row[0]}: {row[1]} - {row[2]} –≥—Ä–Ω ({row[3]})")
print(f"‚è±Ô∏è  –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è SELECT: {sql_read_time*1000:.2f} –º—Å")

# –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
cursor.execute('''
    SELECT 
        o.order_number,
        c.name as customer_name,
        c.email,
        p.name as product_name,
        oi.quantity,
        oi.price,
        o.status
    FROM orders o
    JOIN customers c ON o.customer_id = c.id
    JOIN order_items oi ON o.id = oi.order_id
    JOIN products p ON oi.product_id = p.id
    WHERE o.order_number = 'ORD-001'
''')

print(f"\nüì¶ –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ORD-001:")
for row in cursor.fetchall():
    print(f"  –ö–ª—ñ—î–Ω—Ç: {row[1]} ({row[2]})")
    print(f"  –ü—Ä–æ–¥—É–∫—Ç: {row[3]} - {row[4]} —à—Ç √ó {row[5]} –≥—Ä–Ω")
    print(f"  –°—Ç–∞—Ç—É—Å: {row[6]}")

# ============================================
# SQL - UPDATE
# ============================================

print("\n‚úèÔ∏è  UPDATE –æ–ø–µ—Ä–∞—Ü—ñ—ó (SQL)...")

start_time = time.time()
cursor.execute('''
    UPDATE products
    SET stock = stock - 2
    WHERE name = '–ù–æ—É—Ç–±—É–∫ Lenovo IdeaPad'
''')
sql_update_time = time.time() - start_time

conn.commit()
print(f"‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∞—Å –ø—Ä–æ–¥—É–∫—Ç—É")
print(f"‚è±Ô∏è  –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è UPDATE: {sql_update_time*1000:.2f} –º—Å")

# ============================================
# SQL - DELETE
# ============================================

print("\nüóëÔ∏è  DELETE –æ–ø–µ—Ä–∞—Ü—ñ—ó (SQL)...")

start_time = time.time()
cursor.execute('DELETE FROM products WHERE stock = 0')
sql_delete_time = time.time() - start_time

conn.commit()
print(f"‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∏ –±–µ–∑ –∑–∞–ø–∞—Å—É")
print(f"‚è±Ô∏è  –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è DELETE: {sql_delete_time*1000:.2f} –º—Å")

# ============================================
# SQL - –ê–≥—Ä–µ–≥–∞—Ü—ñ—è
# ============================================

print("\nüìä –ê–ì–†–ï–ì–ê–¶–Ü–Ø (SQL)...")

# –¢–æ–ø –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
cursor.execute('''
    SELECT 
        p.name,
        p.category,
        SUM(oi.quantity) as total_sold,
        SUM(oi.quantity * oi.price) as revenue
    FROM order_items oi
    JOIN products p ON oi.product_id = p.id
    GROUP BY p.id
    ORDER BY total_sold DESC
    LIMIT 5
''')

print("\nüèÜ –¢–æ–ø –ø—Ä–æ–¥—É–∫—Ç—ñ–≤:")
for row in cursor.fetchall():
    print(f"  - {row[0]} ({row[1]}): {row[2]} —à—Ç, –≤–∏—Ä—É—á–∫–∞: {row[3]} –≥—Ä–Ω")

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞
cursor.execute('''
    SELECT 
        c.name,
        c.email,
        COUNT(o.id) as total_orders,
        SUM(o.total_amount) as total_spent,
        AVG(o.total_amount) as avg_order
    FROM customers c
    JOIN orders o ON c.id = o.customer_id
    WHERE c.email = 'ivan@example.com'
    GROUP BY c.id
''')

print("\nüë§ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞:")
for row in cursor.fetchall():
    print(f"  –Ü–º'—è: {row[0]}")
    print(f"  Email: {row[1]}")
    print(f"  –ó–∞–º–æ–≤–ª–µ–Ω—å: {row[2]}")
    print(f"  –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {row[3]} –≥—Ä–Ω")
    print(f"  –°–µ—Ä–µ–¥–Ω—è —Å—É–º–∞: {row[4]:.2f} –≥—Ä–Ω")

# ============================================
# SQL - –Ü–Ω–¥–µ–∫—Å–∏
# ============================================

print("\nüîç –Ü–ù–î–ï–ö–°–ò (SQL)...")

cursor.execute('CREATE INDEX IF NOT EXISTS idx_product_category ON products(category)')
cursor.execute('CREATE INDEX IF NOT EXISTS idx_order_date ON orders(order_date)')
cursor.execute('CREATE INDEX IF NOT EXISTS idx_customer_email ON customers(email)')

conn.commit()
print("‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ —ñ–Ω–¥–µ–∫—Å–∏ –¥–ª—è category, order_date, email")

conn.close()

# ============================================
# –ß–ê–°–¢–ò–ù–ê 2: MongoDB (NoSQL)
# ============================================

print("\n" + "="*70)
print("2Ô∏è‚É£  NoSQL - MongoDB (–î–æ–∫—É–º–µ–Ω—Ç–æ-–æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω–∞ –ë–î)")
print("="*70)

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
client = MongoClient('mongodb://localhost:27017/')
db = client['online_shop_nosql']

# –û—á–∏—Å—Ç–∫–∞ –∫–æ–ª–µ–∫—Ü—ñ–π
db.products.drop()
db.orders.drop()

print("\nüìã –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ–π...")
print("‚úÖ –ö–æ–ª–µ–∫—Ü—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–æ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ)")

# ============================================
# MongoDB - CREATE (Insert)
# ============================================

print("\nüìù CREATE –æ–ø–µ—Ä–∞—Ü—ñ—ó (MongoDB)...")

products_mongo = [
    {
        "name": "–ù–æ—É—Ç–±—É–∫ Lenovo IdeaPad",
        "price": 25000,
        "category": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
        "stock": 15,
        "description": "15.6 –¥—é–π–º—ñ–≤, 8GB RAM, SSD 512GB"
    },
    {
        "name": "–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy S23",
        "price": 30000,
        "category": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
        "stock": 25,
        "description": "128GB, 5G"
    },
    {
        "name": "–ù–∞–≤—É—à–Ω–∏–∫–∏ Sony WH-1000XM5",
        "price": 12000,
        "category": "–ê–∫—Å–µ—Å—É–∞—Ä–∏",
        "stock": 40,
        "description": "–ë–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ, —à—É–º–æ–∑–∞–≥–ª—É—à–µ–Ω–Ω—è"
    },
    {
        "name": "–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ Logitech MX Keys",
        "price": 3500,
        "category": "–ê–∫—Å–µ—Å—É–∞—Ä–∏",
        "stock": 30,
        "description": "–ú–µ—Ö–∞–Ω—ñ—á–Ω–∞, –ø—ñ–¥—Å–≤—ñ—Ç–∫–∞"
    },
    {
        "name": "–ú–æ–Ω—ñ—Ç–æ—Ä Dell 27\"",
        "price": 8500,
        "category": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
        "stock": 10,
        "description": "4K, IPS –ø–∞–Ω–µ–ª—å"
    }
]

start_time = time.time()
product_ids = db.products.insert_many(products_mongo).inserted_ids
mongo_insert_time = time.time() - start_time

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å (–≤–±—É–¥–æ–≤–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
orders_mongo = [
    {
        "orderNumber": "ORD-001",
        "customer": {
            "name": "–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ",
            "email": "ivan@example.com",
            "phone": "+380501234567"
        },
        "products": [
            {"product_id": product_ids[0], "name": "–ù–æ—É—Ç–±—É–∫ Lenovo IdeaPad", "quantity": 1, "price": 25000},
            {"product_id": product_ids[2], "name": "–ù–∞–≤—É—à–Ω–∏–∫–∏ Sony WH-1000XM5", "quantity": 1, "price": 12000}
        ],
        "totalAmount": 37000,
        "orderDate": datetime(2024, 9, 15),
        "status": "–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ"
    },
    {
        "orderNumber": "ORD-002",
        "customer": {
            "name": "–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª–µ–Ω–∫–æ",
            "email": "maria@example.com",
            "phone": "+380502345678"
        },
        "products": [
            {"product_id": product_ids[1], "name": "–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy S23", "quantity": 2, "price": 30000}
        ],
        "totalAmount": 60000,
        "orderDate": datetime(2024, 9, 20),
        "status": "–í –æ–±—Ä–æ–±—Ü—ñ"
    }
]

db.orders.insert_many(orders_mongo)

print(f"‚úÖ MongoDB INSERT: {len(products_mongo)} –ø—Ä–æ–¥—É–∫—Ç—ñ–≤, 2 –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")
print(f"‚è±Ô∏è  –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è INSERT: {mongo_insert_time*1000:.2f} –º—Å")

# ============================================
# MongoDB - READ (Find)
# ============================================

print("\nüìñ READ –æ–ø–µ—Ä–∞—Ü—ñ—ó (MongoDB)...")

start_time = time.time()

thirty_days_ago = datetime.now() - timedelta(days=30)
recent_orders = db.orders.find({
    "orderDate": {"$gte": thirty_days_ago}
})

mongo_read_time = time.time() - start_time

print(f"üîç –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 30 –¥–Ω—ñ–≤:")
for order in recent_orders:
    print(f"  - {order['orderNumber']}: {order['customer']['name']} - {order['totalAmount']} –≥—Ä–Ω ({order['status']})")
print(f"‚è±Ô∏è  –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è FIND: {mongo_read_time*1000:.2f} –º—Å")

# –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è (–≤–∂–µ –≤–±—É–¥–æ–≤–∞–Ω–∞!)
order_detail = db.orders.find_one({"orderNumber": "ORD-001"})
print(f"\nüì¶ –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ORD-001:")
print(f"  –ö–ª—ñ—î–Ω—Ç: {order_detail['customer']['name']} ({order_detail['customer']['email']})")
for p in order_detail['products']:
    print(f"  –ü—Ä–æ–¥—É–∫—Ç: {p['name']} - {p['quantity']} —à—Ç √ó {p['price']} –≥—Ä–Ω")
print(f"  –°—Ç–∞—Ç—É—Å: {order_detail['status']}")

# ============================================
# MongoDB - UPDATE
# ============================================

print("\n‚úèÔ∏è  UPDATE –æ–ø–µ—Ä–∞—Ü—ñ—ó (MongoDB)...")

start_time = time.time()
result = db.products.update_one(
    {"name": "–ù–æ—É—Ç–±—É–∫ Lenovo IdeaPad"},
    {"$inc": {"stock": -2}}
)
mongo_update_time = time.time() - start_time

print(f"‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∞—Å –ø—Ä–æ–¥—É–∫—Ç—É")
print(f"‚è±Ô∏è  –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è UPDATE: {mongo_update_time*1000:.2f} –º—Å")

# ============================================
# MongoDB - DELETE
# ============================================

print("\nüóëÔ∏è  DELETE –æ–ø–µ—Ä–∞—Ü—ñ—ó (MongoDB)...")

start_time = time.time()
result = db.products.delete_many({"stock": 0})
mongo_delete_time = time.time() - start_time

print(f"‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∏ –±–µ–∑ –∑–∞–ø–∞—Å—É")
print(f"‚è±Ô∏è  –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è DELETE: {mongo_delete_time*1000:.2f} –º—Å")

# ============================================
# MongoDB - –ê–≥—Ä–µ–≥–∞—Ü—ñ—è
# ============================================

print("\nüìä –ê–ì–†–ï–ì–ê–¶–Ü–Ø (MongoDB)...")

# –¢–æ–ø –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
pipeline = [
    {"$unwind": "$products"},
    {
        "$lookup": {
            "from": "products",
            "localField": "products.product_id",
            "foreignField": "_id",
            "as": "product_info"
        }
    },
    {"$unwind": "$product_info"},
    {
        "$group": {
            "_id": "$products.product_id",
            "name": {"$first": "$product_info.name"},
            "category": {"$first": "$product_info.category"},
            "totalSold": {"$sum": "$products.quantity"},
            "revenue": {"$sum": {"$multiply": ["$products.quantity", "$products.price"]}}
        }
    },
    {"$sort": {"totalSold": -1}},
    {"$limit": 5}
]

print("\nüèÜ –¢–æ–ø –ø—Ä–æ–¥—É–∫—Ç—ñ–≤:")
for item in db.orders.aggregate(pipeline):
    print(f"  - {item['name']} ({item['category']}): {item['totalSold']} —à—Ç, –≤–∏—Ä—É—á–∫–∞: {item['revenue']} –≥—Ä–Ω")

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞
pipeline2 = [
    {"$match": {"customer.email": "ivan@example.com"}},
    {
        "$group": {
            "_id": "$customer.email",
            "name": {"$first": "$customer.name"},
            "totalOrders": {"$sum": 1},
            "totalSpent": {"$sum": "$totalAmount"},
            "avgOrder": {"$avg": "$totalAmount"}
        }
    }
]

print("\nüë§ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞:")
for stat in db.orders.aggregate(pipeline2):
    print(f"  –Ü–º'—è: {stat['name']}")
    print(f"  Email: {stat['_id']}")
    print(f"  –ó–∞–º–æ–≤–ª–µ–Ω—å: {stat['totalOrders']}")
    print(f"  –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {stat['totalSpent']} –≥—Ä–Ω")
    print(f"  –°–µ—Ä–µ–¥–Ω—è —Å—É–º–∞: {stat['avgOrder']:.2f} –≥—Ä–Ω")

# ============================================
# MongoDB - –Ü–Ω–¥–µ–∫—Å–∏
# ============================================

print("\nüîç –Ü–ù–î–ï–ö–°–ò (MongoDB)...")

db.products.create_index([("category", 1)])
db.orders.create_index([("orderDate", -1)])
db.orders.create_index([("customer.email", 1)])

print("‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ —ñ–Ω–¥–µ–∫—Å–∏ –¥–ª—è category, orderDate, customer.email")

client.close()

# ============================================
# –ü–û–†–Ü–í–ù–Ø–õ–¨–ù–ò–ô –ê–ù–ê–õ–Ü–ó
# ============================================

print("\n" + "="*70)
print("üìä –ü–û–†–Ü–í–ù–Ø–õ–¨–ù–ò–ô –ê–ù–ê–õ–Ü–ó SQL vs NoSQL")
print("="*70)

print(f"""
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                    –ü–†–û–î–£–ö–¢–ò–í–ù–Ü–°–¢–¨ –û–ü–ï–†–ê–¶–Ü–ô                          ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ –û–ø–µ—Ä–∞—Ü—ñ—è                ‚îÇ SQL (SQLite)    ‚îÇ NoSQL (MongoDB)         ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ INSERT                  ‚îÇ {sql_insert_time*1000:>7.2f} –º—Å      ‚îÇ {mongo_insert_time*1000:>7.2f} –º—Å            ‚îÇ
‚îÇ SELECT/FIND             ‚îÇ {sql_read_time*1000:>7.2f} –º—Å      ‚îÇ {mongo_read_time*1000:>7.2f} –º—Å            ‚îÇ
‚îÇ UPDATE                  ‚îÇ {sql_update_time*1000:>7.2f} –º—Å      ‚îÇ {mongo_update_time*1000:>7.2f} –º—Å            ‚îÇ
‚îÇ DELETE                  ‚îÇ {sql_delete_time*1000:>7.2f} –º—Å      ‚îÇ {mongo_delete_time*1000:>7.2f} –º—Å            ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
""")

print("""
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                   –ü–ï–†–ï–í–ê–ì–ò –¢–ê –ù–ï–î–û–õ–Ü–ö–ò                              ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                                     ‚îÇ
‚îÇ ‚úÖ SQL (SQLite) - –ü–ï–†–ï–í–ê–ì–ò:                                         ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ  1. ACID —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó - –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö            ‚îÇ
‚îÇ  2. –ù–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è - –Ω–µ–º–∞—î –¥—É–±–ª—é–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö                          ‚îÇ
‚îÇ  3. –°—Ç—Ä–æ–≥–∞ —Ç–∏–ø—ñ–∑–∞—Ü—ñ—è - –∑–∞—Ö–∏—Å—Ç –≤—ñ–¥ –ø–æ–º–∏–ª–æ–∫                          ‚îÇ
‚îÇ  4. –°–∫–ª–∞–¥–Ω—ñ JOIN –∑–∞–ø–∏—Ç–∏ - –ª–µ–≥–∫–æ –∑–≤'—è–∑—É–≤–∞—Ç–∏ —Ç–∞–±–ª–∏—Ü—ñ                 ‚îÇ
‚îÇ  5. –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü—ñ—è - SQL –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è —Å–∫—Ä—ñ–∑—å                      ‚îÇ
‚îÇ  6. –°—Ö–µ–º–∞ –¥–∞–Ω–∏—Ö - —á—ñ—Ç–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞                                  ‚îÇ
‚îÇ  7. –ó—Ä—ñ–ª—ñ—Å—Ç—å - –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ —Ä–æ–∫–∞–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó                        ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ ‚ùå SQL (SQLite) - –ù–ï–î–û–õ–Ü–ö–ò:                                         ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ  1. –ñ–æ—Ä—Å—Ç–∫–∞ —Å—Ö–µ–º–∞ - –≤–∞–∂–∫–æ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É                      ‚îÇ
‚îÇ  2. –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–µ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è - —Å–∫–ª–∞–¥–Ω–æ —Ä–æ–∑–ø–æ–¥—ñ–ª–∏—Ç–∏ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è   ‚îÇ
‚îÇ  3. JOIN –æ–ø–µ—Ä–∞—Ü—ñ—ó - –º–æ–∂—É—Ç—å –±—É—Ç–∏ –ø–æ–≤—ñ–ª—å–Ω–∏–º–∏                         ‚îÇ
‚îÇ  4. –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å –º—ñ–≥—Ä–∞—Ü—ñ–π - –∑–º—ñ–Ω–∞ —Å—Ö–µ–º–∏ –≤–∏–º–∞–≥–∞—î –∑—É—Å–∏–ª—å               ‚îÇ
‚îÇ  5. –û–±–º–µ–∂–µ–Ω–∞ –≥–Ω—É—á–∫—ñ—Å—Ç—å - –≤—Å—ñ –∑–∞–ø–∏—Å–∏ –º–∞—é—Ç—å –æ–¥–Ω–∞–∫–æ–≤—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É       ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                                     ‚îÇ
‚îÇ ‚úÖ NoSQL (MongoDB) - –ü–ï–†–ï–í–ê–ì–ò:                                      ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ  1. –ì–Ω—É—á–∫–∞ —Å—Ö–µ–º–∞ - –º–æ–∂–Ω–∞ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏                 ‚îÇ
‚îÇ  2. –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–µ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è - –ª–µ–≥–∫–æ –¥–æ–¥–∞–≤–∞—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∏           ‚îÇ
‚îÇ  3. –í–±—É–¥–æ–≤–∞–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ - –Ω–µ–º–∞—î –ø–æ—Ç—Ä–µ–±–∏ –≤ JOIN                     ‚îÇ
‚îÇ  4. –®–≤–∏–¥–∫—ñ—Å—Ç—å —á–∏—Ç–∞–Ω–Ω—è - –¥–µ–Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ                       ‚îÇ
‚îÇ  5. JSON —Ñ–æ—Ä–º–∞—Ç - –ø—Ä–∏—Ä–æ–¥–Ω–æ –¥–ª—è –≤–µ–±-–¥–æ–¥–∞—Ç–∫—ñ–≤                        ‚îÇ
‚îÇ  6. –ê–≥—Ä–µ–≥–∞—Ü—ñ—è - –ø–æ—Ç—É–∂–Ω–∏–π pipeline –¥–ª—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏                    ‚îÇ
‚îÇ  7. –®–≤–∏–¥–∫–∞ —Ä–æ–∑—Ä–æ–±–∫–∞ - –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–æ–µ–∫—Ç—É–≤–∞—Ç–∏ —Å—Ö–µ–º—É –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å    ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ ‚ùå NoSQL (MongoDB) - –ù–ï–î–û–õ–Ü–ö–ò:                                      ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ  1. –î—É–±–ª—é–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö - –º–æ–∂–µ –±—É—Ç–∏ –±–∞–≥–∞—Ç–æ –∫–æ–ø—ñ–π                      ‚îÇ
‚îÇ  2. –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å –æ–Ω–æ–≤–ª–µ–Ω—å - —Ç—Ä–µ–±–∞ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –≤ –∫—ñ–ª—å–∫–æ—Ö –º—ñ—Å—Ü—è—Ö        ‚îÇ
‚îÇ  3. –ù–µ–º–∞—î JOIN - —Å–∫–ª–∞–¥–Ω—ñ—à–µ –∑–≤'—è–∑—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ                         ‚îÇ
‚îÇ  4. –ú–µ–Ω—à–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å - eventual consistency                   ‚îÇ
‚îÇ  5. –†–æ–∑–º—ñ—Ä –¥–∞–Ω–∏—Ö - –¥–µ–Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–±—ñ–ª—å—à—É—î –æ–±—Å—è–≥                   ‚îÇ
‚îÇ  6. –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π - –Ω–µ –≤—Å—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∞—Ç–æ–º–∞—Ä–Ω—ñ               ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ              –ö–û–õ–ò –í–ò–ö–û–†–ò–°–¢–û–í–£–í–ê–¢–ò SQL vs NoSQL                      ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                                     ‚îÇ
‚îÇ üéØ –í–ò–ö–û–†–ò–°–¢–û–í–£–ô–¢–ï SQL, –Ø–ö–©–û:                                        ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ  ‚Ä¢ –ü–æ—Ç—Ä—ñ–±–Ω—ñ ACID —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó (–±–∞–Ω–∫–∏, —Ñ—ñ–Ω–∞–Ω—Å–∏)                       ‚îÇ
‚îÇ  ‚Ä¢ –°–∫–ª–∞–¥–Ω—ñ –∑–≤'—è–∑–∫–∏ –º—ñ–∂ –¥–∞–Ω–∏–º–∏ (ERP, CRM —Å–∏—Å—Ç–µ–º–∏)                   ‚îÇ
‚îÇ  ‚Ä¢ –ß—ñ—Ç–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö (—ñ–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü—ñ—è, –±—É—Ö–≥–∞–ª—Ç–µ—Ä—ñ—è)             ‚îÇ
‚îÇ  ‚Ä¢ –í–∞–∂–ª–∏–≤–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å (–º–µ–¥–∏—á–Ω—ñ —Å–∏—Å—Ç–µ–º–∏)                       ‚îÇ
‚îÇ  ‚Ä¢ –ë–∞–≥–∞—Ç–æ JOIN –∑–∞–ø–∏—Ç—ñ–≤ (–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞)                                 ‚îÇ
‚îÇ  ‚Ä¢ –ù–µ–≤–µ–ª–∏–∫—ñ/—Å–µ—Ä–µ–¥–Ω—ñ –æ–±—Å—è–≥–∏ –¥–∞–Ω–∏—Ö                                   ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ –ü—Ä–∏–∫–ª–∞–¥–∏: –ë–∞–Ω–∫—ñ–≤—Å—å–∫—ñ —Å–∏—Å—Ç–µ–º–∏, ERP, CRM, E-commerce –∑ —ñ–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º    ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                                     ‚îÇ
‚îÇ üéØ –í–ò–ö–û–†–ò–°–¢–û–í–£–ô–¢–ï NoSQL, –Ø–ö–©–û:                                      ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ  ‚Ä¢ –î–∞–Ω—ñ —á–∞—Å—Ç–æ –∑–º—ñ–Ω—é—é—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É (—Å—Ç–∞—Ä—Ç–∞–ø–∏, –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏)             ‚îÇ
‚îÇ  ‚Ä¢ –ü–æ—Ç—Ä—ñ–±–Ω–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–µ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è (–≤–µ–ª–∏–∫—ñ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è)      ‚îÇ
‚îÇ  ‚Ä¢ –í–±—É–¥–æ–≤–∞–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –ø—Ä–∏—Ä–æ–¥–Ω—ñ –¥–ª—è –º–æ–¥–µ–ª—ñ (–±–ª–æ–≥–∏, —Å–æ—Ü–º–µ—Ä–µ–∂—ñ)      ‚îÇ
‚îÇ  ‚Ä¢ –®–≤–∏–¥–∫—ñ—Å—Ç—å —á–∏—Ç–∞–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–∞ (–∫–∞—Ç–∞–ª–æ–≥–∏, –∫–æ–Ω—Ç–µ–Ω—Ç)                  ‚îÇ
‚îÇ  ‚Ä¢ –ü—Ä–∞—Ü—é—î—Ç–µ –∑ –≤–µ–ª–∏–∫–∏–º–∏ –¥–∞–Ω–∏–º–∏ (–ª–æ–≥–∏, IoT)                          ‚îÇ
‚îÇ  ‚Ä¢ –ì–Ω—É—á–∫—ñ—Å—Ç—å –≤–∞–∂–ª–∏–≤—ñ—à–∞ –∑–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ñ—Å—Ç—å                          ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ –ü—Ä–∏–∫–ª–∞–¥–∏: –°–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ, –±–ª–æ–≥–∏, IoT, –ª–æ–≥—É–≤–∞–Ω–Ω—è, –∫–∞—Ç–∞–ª–æ–≥–∏ —Ç–æ–≤–∞—Ä—ñ–≤‚îÇ
‚îÇ                                                                     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                    –ì–Ü–ë–†–ò–î–ù–ò–ô –ü–Ü–î–•–Ü–î                                 ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                                     ‚îÇ
‚îÇ –ß–∞—Å—Ç–æ –Ω–∞–π–∫—Ä–∞—â–∏–º —Ä—ñ—à–µ–Ω–Ω—è–º —î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –û–ë–û–•:                      ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ  ‚Ä¢ SQL –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö (—Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ)               ‚îÇ
‚îÇ  ‚Ä¢ NoSQL –¥–ª—è –º–∞—Å—à—Ç–∞–±–æ–≤–∞–Ω–∏—Ö —á–∞—Å—Ç–∏–Ω (–ª–æ–≥–∏, –∫–µ—à, —Å–µ—Å—ñ—ó)               ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îÇ –ü—Ä–∏–∫–ª–∞–¥: E-commerce                                                 ‚îÇ
‚îÇ  ‚Üí SQL: –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è, –ø–ª–∞—Ç–µ–∂—ñ, —ñ–Ω–≤–µ–Ω—Ç–∞—Ä                              ‚îÇ
‚îÇ  ‚Üí NoSQL: –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä—ñ–≤, –≤—ñ–¥–≥—É–∫–∏, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó                   ‚îÇ
‚îÇ                                                                     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
""")

print("\n" + "="*70)
print("‚úÖ –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
print("="*70)